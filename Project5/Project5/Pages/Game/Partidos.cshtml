@page
@model プロジェクト5.Pages.Game.PartidoModel
@{
    ViewData["Title"] = "Partidos";
}

<h2>@ViewData["Title"]</h2>
<div class="d-flex justify-content-end p-2">
    <a asp-page="./AgregarPartido" class="btn btn-primary m-2" role="button">Agregar Partido</a>
    <a asp-page="/GameResult/Resultados" class="btn btn-primary m-2" role="button">Ver resultados de los partidos</a>
</div>
<div class="col-md-6 col-md-offset-2">
    <section>
        <h4>Nota:</h4>
        <div>
            <p>
                Un Equipo puede tener hasta 11 resultados, porque los resultados son por cada jugador(local) del partido.
            </p>
        </div>
    </section>
</div>
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">
                Identificador del partido
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].FechPart)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].TiemJugado)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].Estadio)
            </th>
            <th scope="col">
                Equipo Local
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].TotalJugLc)
            </th>
            <th scope="col">
                Equipo Visitante
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].TotalJugVis)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].Status)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].CreatedAT)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].UpdatedAT)
            </th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Partido)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechPart)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TiemJugado)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Estadio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Equipo.NomEquip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalJugLc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EquipoSub.Equipo.NomEquip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalJugVis)
                </td>
                @if (item.Status == true)
                {
                    <td>Activo</td>
                }
                else
                {
                    <td>Inactivo</td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAT)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedAT)
                </td>
                <td><a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-success btn-sm">Editar</a></td>
                <td><a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Eliminar</a></td>
            </tr>
        }
    </tbody>
</table>

<div class="border border-dark mt-3">
    <h3>Obter resultados</h3>
    <input type="button" value="Obtener resultados" class="btn btn-success" onclick="generatedPdfFile()" />
    <div id="dynamicTable" class="table-responsive table-responsive-md"></div>
</div>

@section Scripts{
    <script src="~/lib/pdfmake/pdfmake.min.js"></script>
    <script src="~/lib/pdfmake/vfs_fonts.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

        });

        function getResultados() {
            $.ajax({
                url: "?handler=AsyncResultados",
                method: "GET"
            }).done(function (data) {
                //alert('This works');
                createTable(data);
            }).fail(function (jqXHR, textStatus, error) {
                alert('La tarea ha fallado con éxito');
            });
        }

        function createTable(data) {
            var columns = [];
            $.each(data[0], function (key, value) {
                columns.push(key);
            });

            var table = document.createElement("table");
            table.className = "table table-striped table-info";

            var thead = document.createElement("thead");
            thead.className = "thead-dark";
            var tr = thead.insertRow(-1);

            $.each(columns, function (index, value) {
                var th = document.createElement("th");
                th.innerHTML = value;
                tr.appendChild(th);
            });

            table.append(thead);

            var tbody = document.createElement("tbody");

            $.each(data, function (index, obj) {
                tr = tbody.insertRow(-1);
                $.each(obj, function (index, property) {
                    var cell = tr.insertCell(-1);
                    cell.innerHTML = property
                });
            });

            table.append(tbody)

            var container = $("#dynamicTable");
            container.innerHTML = '';
            container.append(table);
        }

        function generatedPdfFile() {
            var win = window.open('', '_blank');
            var docDefinition = { content: "This is my final message, good bye..." };

            pdfMake.createPdf(docDefinition).open({}, win);
        }
    </script>
}