@page
@model プロジェクト5.Pages.Game.PartidoModel
@{
    ViewData["Title"] = "Partidos";
}

<h2>@ViewData["Title"]</h2>
<div class="d-flex justify-content-end p-2">
    <a asp-page="./AgregarPartido" class="btn btn-primary m-2" role="button">Agregar Partido</a>
    <a asp-page="/GameResult/Resultados" class="btn btn-primary m-2" role="button">Ver resultados de los partidos</a>
</div>
<div class="col-md-6 col-md-offset-2">
    <section>
        <h4>Nota:</h4>
        <div>
            <p>
                Un Equipo puede tener hasta 11 resultados, porque los resultados son por cada jugador(local) del partido.
            </p>
        </div>
    </section>
</div>
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">
                Identificador del partido
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].FechPart)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].TiemJugado)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].Estadio)
            </th>
            <th scope="col">
                Equipo Local
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].TotalJugLc)
            </th>
            <th scope="col">
                Equipo Visitante
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].TotalJugVis)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].Status)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].CreatedAT)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Partido[0].UpdatedAT)
            </th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Partido)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechPart)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TiemJugado)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Estadio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Equipo.NomEquip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalJugLc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EquipoSub.Equipo.NomEquip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalJugVis)
                </td>
                @if (item.Status == true)
                {
                    <td>Activo</td>
                }
                else
                {
                    <td>Inactivo</td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAT)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedAT)
                </td>
                <td><a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-success btn-sm">Editar</a></td>
                <td><a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Eliminar</a></td>
            </tr>
        }
    </tbody>
</table>


<div id="Reporte">
    <table class="table table-dark">
        <colgroup>
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
        </colgroup>
        <thead class="thead-dark">
            <tr class='warning'>
                <th>@Html.DisplayNameFor(model => model.ResultadoPartido[0].Partido)</th>
                <th>@Html.DisplayNameFor(model => model.ResultadoPartido[0].Jugador)</th>
                <th>@Html.DisplayNameFor(model => model.ResultadoPartido[0].Jugador.ApellidoP)</th>
                <th>@Html.DisplayNameFor(model => model.ResultadoPartido[0].Jugador.ApellidoM)</th>
                <th>@Html.DisplayNameFor(model => model.ResultadoPartido[0].Goles)</th>
                <th>@Html.DisplayNameFor(model => model.ResultadoPartido[0].Asistencias)</th>
                <th>@Html.DisplayNameFor(model => model.ResultadoPartido[0].AutoGoles)</th>
                <th>@Html.DisplayNameFor(model => model.ResultadoPartido[0].Penales)</th>
                <th>Tarjetas amarillas</th>
                <th>Tarjetas rojas</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ResultadoPartido)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.IdPartido)</td>

                    <td>@Html.DisplayFor(modelItem => item.Jugador.NomJug)</td>

                    <td>@Html.DisplayFor(modelItem => item.Jugador.ApellidoP)</td>

                    <td>@Html.DisplayFor(modelItem => item.Jugador.ApellidoM)</td>

                    <td>@Html.DisplayFor(modelItem => item.Goles)</td>

                    <td>@Html.DisplayFor(modelItem => item.Asistencias)</td>

                    <td>@Html.DisplayFor(modelItem => item.AutoGoles)</td>

                    <td>@Html.DisplayFor(modelItem => item.Penales)</td>

                    <td>@Html.DisplayFor(modelItem => item.TarjAmarilla)</td>

                    <td>@Html.DisplayFor(modelItem => item.TarjRoja)</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<button onclick="javascript:demoFromHTML();">Exportar reporte</button>


@section Scripts{
    <script src="~/js/jspdf.debug.js"></script>
    <script type="text/javascript">
        function demoFromHTML() {
            var pdf = new jsPDF('letter');
            // source can be HTML-formatted string, or a reference
            // to an actual DOM element from which the text will be scraped.
            source = $('#Reporte')[0];
            // we support special element handlers. Register them with jQuery-style
            // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
            // There is no support for any other type of selectors
            // (class, of compound) at this time.
            specialElementHandlers = {
                // element with id of "bypass" - jQuery style selector
                '#bypassme': function (element, renderer) {
                    // true = "handled elsewhere, bypass text extraction"
                    return true
                }
            };
            margins = {
                top: 40,
                bottom: 20,
                left: 50,
                width: 500
            };
            // all coords and widths are in jsPDF instance's declared units
            // 'inches' in this case
            pdf.fromHTML(
                source, // HTML string or DOM elem ref.
                margins.left, // x coord
                margins.top, { // y coord
                'width': margins.width, // max width of content on PDF
                'elementHandlers': specialElementHandlers
            },
                function (dispose) {
                    // dispose: object with X, Y of the last line add to the PDF
                    //          this allow the insertion of new lines after html
                    pdf.save('Reporte jugadores.pdf');
                }, margins);
        }
    </script>
}