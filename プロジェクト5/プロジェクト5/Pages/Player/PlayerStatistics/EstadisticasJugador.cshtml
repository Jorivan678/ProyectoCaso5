@page
@model プロジェクト5.Pages.Player.PlayerStatistics.EstadisticasJugadorModel
@{
    ViewData["Title"] = "Estadísticas de los jugadores";
}
<h2>@ViewData["Title"]</h2>
<p>
    <a asp-page="./Create" class="btn btn-primary m-2" role="button">Agregar estadística</a>
</p>

<form>
    <p>
        <select asp-for="Player" asp-items="Model.SelectPlayer">
            <option value="">Todo</option>
        </select>
        <input type="submit" value="Filtrar" />
    </p>
</form>

<div id="Reporte">
    <table class="table table-striped table-row-group">
        <colgroup>
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
            <col width="20%">
        </colgroup>
        <thead class="table-header-group thead-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.EstadisticasJugador[0].Jugador)</th>
                <th>@Html.DisplayNameFor(model => model.EstadisticasJugador[0].Partido)</th>
                <th>@Html.DisplayNameFor(model => model.EstadisticasJugador[0].Minutos)</th>
                <th>@Html.DisplayNameFor(model => model.EstadisticasJugador[0].Asistencias)</th>
                <th>@Html.DisplayNameFor(model => model.EstadisticasJugador[0].TarjAmar)</th>
                <th>@Html.DisplayNameFor(model => model.EstadisticasJugador[0].TarjRoja)</th>
                <th>@Html.DisplayNameFor(model => model.EstadisticasJugador[0].TirosporPart)</th>
                <th>@Html.DisplayNameFor(model => model.EstadisticasJugador[0].AciertoPase)</th>
                <th>@Html.DisplayNameFor(model => model.EstadisticasJugador[0].Aereos)</th>
                <th>@Html.DisplayNameFor(model => model.EstadisticasJugador[0].JugadordelPart)</th>
                <th>@Html.DisplayNameFor(model => model.EstadisticasJugador[0].Rating)</th>
                <th>-</th>
                <th>-</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.EstadisticasJugador)
            {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Jugador.NomJug)</td>
                <td>@Html.DisplayFor(modelItem => item.Partido.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.Minutos)</td>
                <td>@Html.DisplayFor(modelItem => item.Asistencias)</td>
                <td>@Html.DisplayFor(modelItem => item.TarjAmar)</td>
                <td>@Html.DisplayFor(modelItem => item.TarjRoja)</td>
                <td>@Html.DisplayFor(modelItem => item.TirosporPart)</td>
                <td>@Html.DisplayFor(modelItem => item.AciertoPase)</td>
                <td>@Html.DisplayFor(modelItem => item.Aereos)</td>
                @if(item.JugadordelPart != true){<td>No</td>}else{<td>Si</td>}
                <td>@Html.DisplayFor(modelItem => item.Rating)</td>
                <td><a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-success btn-sm">Editar</a></td>
                <td><a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Eliminar</a></td>
            </tr>
            }
        </tbody>
    </table>
</div>
<button onclick="javascript:demoFromHTML();">Exportar reporte</button>

<a asp-page="/Player/Jugadores">Regresar a jugadores</a>

@section Scripts{
    <script src="~/js/jspdf.debug.js"></script>
    <script type="text/javascript">
        function demoFromHTML() {
            var pdf = new jsPDF('p','pt','letter');
            // source can be HTML-formatted string, or a reference
            // to an actual DOM element from which the text will be scraped.
            source = $('#Reporte')[0];
            // we support special element handlers. Register them with jQuery-style
            // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
            // There is no support for any other type of selectors
            // (class, of compound) at this time.
            specialElementHandlers = {
                // element with id of "bypass" - jQuery style selector
                '#bypassme': function (element, renderer) {
                    // true = "handled elsewhere, bypass text extraction"
                    return true
                }
            };
            margins = {
                top: 80,
                bottom: 60,
                left: 40,
                width: 522
            };
            // all coords and widths are in jsPDF instance's declared units
            // 'inches' in this case
            pdf.fromHTML(
                source, // HTML string or DOM elem ref.
                margins.left, // x coord
                margins.top, { // y coord
                'width': margins.width, // max width of content on PDF
                'elementHandlers': specialElementHandlers
            },
                function (dispose) {
                    // dispose: object with X, Y of the last line add to the PDF
                    //          this allow the insertion of new lines after html
                    pdf.save('Reporte jugadores.pdf');
                }, margins);
        }
    </script>
}